rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
      // Tracks - More permissive rules for creation
    match /tracks/{trackId} {
      // Allow authenticated users to read all tracks
      allow read: if request.auth != null;
      
      // Allow authenticated users to create tracks with proper data
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.createdBy
                    && request.resource.data.keys().hasAll(['title', 'genre', 'createdBy', 'audioUrl'])
                    && request.resource.data.title is string
                    && request.resource.data.genre is string
                    && request.resource.data.audioUrl is string;
        // Allow users to update/delete only their own tracks
      allow update, delete: if request.auth != null 
                            && request.auth.uid == resource.data.createdBy;
    }
    
    // Comments - Simple top-level collection
    match /comments/{commentId} {
      // Allow authenticated users to read all comments
      allow read: if request.auth != null;
      
      // Allow authenticated users to create comments with proper data
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.userId
                    && request.resource.data.keys().hasAll(['userId', 'userName', 'content', 'trackId', 'status'])
                    && request.resource.data.content is string
                    && request.resource.data.content.size() > 0
                    && request.resource.data.content.size() <= 500
                    && request.resource.data.status == 'pending';
      
      // Allow track owner to update comments (for moderation)
      allow update: if request.auth != null;
      
      // Allow users to delete only their own comments
      allow delete: if request.auth != null 
                    && request.auth.uid == resource.data.userId;
    }
    
    // Playlists - Users can read all playlists but only write their own
    match /playlists/{playlistId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null 
                            && request.auth.uid == resource.data.createdBy;
    }
    
    // Atividades - Users can only access their own activity data
    match /atividades/{userId} {
      // Users can only read their own activities
      allow read: if request.auth != null && request.auth.uid == userId;
      
      match /historico/{activityId} {
        // Users can only read their own activity history
        allow read: if request.auth != null && request.auth.uid == userId;
        
        // Only server (Firebase Admin) can write activities
        // Client-side writes are not allowed for security
        allow write: if false;
      }
    }
    
    // Default allow read for authenticated users (for general collections)
    match /{document=**} {
      allow read: if request.auth != null;
    }
  }
}
